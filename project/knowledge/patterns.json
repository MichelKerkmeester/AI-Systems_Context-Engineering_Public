{
  "initialization": {
    "pattern": "Direct init",
    "example": "initMyComponent();",
    "avoid": "document.addEventListener('DOMContentLoaded', ...)"
  },
  "element_safety": {
    "pattern": "Always check existence",
    "example": "if (element) { ... }"
  },
  "selectors": {
    "pattern": "Data attributes",
    "example": "[data-component=\"nav\"]",
    "avoid": ".w-nav, #w-dropdown"
  },
  "animations": {
    "hierarchy": [
      "CSS transitions for simple state changes",
      "Motion.dev for advanced animations",
      "GSAP only for complex timelines"
    ],
    "performance": {
      "use_will_change": "sparingly",
      "batch_dom_updates": true,
      "use_raf": true
    }
  },
  "error_handling": {
    "pattern": "Graceful degradation",
    "silent_failures": true,
    "user_feedback": "when critical"
  },
  "debugging": {
    "production": "if (DEBUG) { ... }",
    "development": "console.log allowed"
  },
  "mcp_integration": {
    "pattern": "Handle both object and string inputs",
    "example": "if (isinstance(data, str)): data = json.loads(data)",
    "note": "MCP protocol may pass parameters as strings"
  },
  "api_mismatches": {
    "pattern": "Verify actual API signatures",
    "example": "help(Class.method) to check parameters",
    "common_issues": {
      "graphiti": "valid_at → reference_time",
      "enum_types": "String source → EpisodeType.value"
    }
  },
  "service_debugging": {
    "pattern": "Test functions directly before MCP integration",
    "steps": [
      "Create standalone test script",
      "Import and call function directly",
      "Fix issues in isolation",
      "Apply to actual service location"
    ]
  }
}