{
  "test_run": {
    "timestamp": "2025-01-21T12:00:00Z",
    "test_suite": "Prompt Improver Context/Type Detection",
    "total_tests": 5,
    "results": [
      {
        "test_id": 1,
        "input_prompt": "create a modal component",
        "expected_type": "code_generation",
        "detected_type": "code_generation",
        "confidence_score": 0.95,
        "rules_applied": [
          "Be specific about the programming language",
          "Include any constraints or requirements",
          "Specify the desired output format"
        ],
        "success": true,
        "notes": "Correctly identified as code generation task with high confidence"
      },
      {
        "test_id": 2,
        "input_prompt": "why is this not working?",
        "expected_type": "debugging",
        "detected_type": "debugging",
        "confidence_score": 0.92,
        "rules_applied": [
          "Include the full error message or stack trace",
          "Provide the relevant code snippet",
          "Describe what you expected to happen vs what actually happened"
        ],
        "success": true,
        "notes": "Correctly identified debugging context, applied appropriate diagnostic rules"
      },
      {
        "test_id": 3,
        "input_prompt": "review this code for security",
        "expected_type": "code_review",
        "detected_type": "code_review",
        "confidence_score": 0.98,
        "rules_applied": [
          "Specify what aspects to focus on (security, performance, readability)",
          "Mention the programming language and framework",
          "Include any specific standards or guidelines to follow"
        ],
        "success": true,
        "notes": "Very high confidence on security review detection, security-specific rules prioritized"
      },
      {
        "test_id": 4,
        "input_prompt": "document this function",
        "expected_type": "documentation",
        "detected_type": "documentation",
        "confidence_score": 0.96,
        "rules_applied": [
          "Specify the documentation format (JSDoc, docstrings, markdown)",
          "Include what level of detail is needed",
          "Mention if examples should be included"
        ],
        "success": true,
        "notes": "Correctly identified documentation task, appropriate formatting rules applied"
      },
      {
        "test_id": 5,
        "input_prompt": "refactor this for better performance",
        "expected_type": "task_planning",
        "detected_type": "code_review",
        "confidence_score": 0.88,
        "rules_applied": [
          "Specify what aspects to focus on (security, performance, readability)",
          "Include performance metrics or benchmarks if available",
          "Mention the programming language and framework"
        ],
        "success": false,
        "notes": "Misclassified as code_review instead of task_planning. The word 'refactor' combined with 'performance' triggered review rules rather than planning rules"
      }
    ],
    "summary": {
      "total_tests": 5,
      "successful": 4,
      "failed": 1,
      "accuracy_percentage": 80,
      "average_confidence": 0.938,
      "confidence_by_type": {
        "code_generation": 0.95,
        "debugging": 0.92,
        "code_review": 0.93,
        "documentation": 0.96,
        "task_planning": null
      },
      "misclassifications": [
        {
          "expected": "task_planning",
          "detected": "code_review",
          "reason": "Refactoring requests are ambiguous - could be review or planning depending on scope"
        }
      ]
    },
    "recommendations": [
      {
        "issue": "Task planning vs Code review ambiguity",
        "suggestion": "Add keywords like 'plan', 'approach', 'strategy' to better distinguish planning tasks from review tasks"
      },
      {
        "issue": "Refactoring classification",
        "suggestion": "Create a specific 'refactoring' type or add better heuristics to distinguish between reviewing existing code and planning refactoring work"
      },
      {
        "improvement": "Context awareness",
        "suggestion": "Consider adding context from previous messages to improve classification accuracy"
      }
    ]
  }
}