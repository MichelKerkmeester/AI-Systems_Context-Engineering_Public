{
  "settings": {
    "context_compaction": true,
    "command_whitelist": [
      "memory",
      "logic",
      "status"
    ],
    "response_length": "adaptive",
    "autocomplete": true,
    "sequential_thinking": {
      "enabled": true,
      "mandatory": true,
      "auto_trigger": {
        "complexity_threshold": "medium",
        "time_estimate": ">= 10min",
        "file_count": ">= 5",
        "error_debugging": true,
        "architecture_decisions": true,
        "performance_optimization": true,
        "security_implementation": true
      },
      "exceptions": {
        "simple_tasks": [
          "read",
          "write",
          "edit",
          "ls",
          "grep",
          "cat"
        ],
        "known_context": true,
        "direct_commands": true,
        "quick_retrieval": true
      },
      "visual_indicators": {
        "active": "[\ud83e\udde0 Sequential Thinking: Active]",
        "stage": "[\ud83e\udde0 Stage: {stage}]",
        "complete": "[\ud83e\udde0 Thinking Complete]"
      },
      "stages": [
        "Problem Definition",
        "Research",
        "Analysis",
        "Synthesis",
        "Conclusion"
      ]
    }
  },
  "aliases": {
    "commands": {
      "/l": "/logic",
      "/m": "/memory",
      "/s": "/status"
    },
    "quick_access": {
      "/memory-search": "/memory search",
      "/memory-auto": "/memory auto",
      "/logic-help": "/logic help",
      "/logic-hooks": "/logic hooks",
      "/logic-hooks-status": "/logic hooks status",
      "/logic-claude-md-update": "/logic claude-md-update"
    }
  },
  "deprecated_commands": {
    "_comment": "These commands have been replaced by automation via hooks",
    "replaced": {
      "/context": "Automated via memory-context-hook-graphiti.py",
      "/pr": "Use GitHub MCP tools directly",
      "/test": "Automated via quality-hook.py",
      "/workflow": "Automated via task-management-hook.py",
      "/notebook": "Automated via pattern-extraction-hook.py",
      "/mode": "No longer needed - system runs in auto mode"
    }
  },
  "drift_prevention": {
    "enabled": true,
    "thresholds": {
      "response_relevance": 0.7,
      "context_alignment": 0.75
    },
    "actions": {
      "mild_drift": "silent_partial_refresh",
      "severe_drift": "force_refresh_prompt"
    }
  },
  "validation": {
    "slater_constraints": {
      "no_domcontentloaded": {
        "patterns": [
          "DOMContentLoaded",
          "document\\.addEventListener\\(['\"]DOMContentLoaded"
        ],
        "severity": "error",
        "message": "Slater autoloads - no DOMContentLoaded needed. Use direct initialization or Webflow.push() for dependencies.",
        "auto_fix": true
      },
      "no_vite_references": {
        "patterns": [
          "vite",
          "Vite",
          "import\\.meta\\.hot"
        ],
        "severity": "warning",
        "message": "Vite is for future use only. Current development uses Slater."
      }
    },
    "webflow_constraints": {
      "no_dom_manipulation": {
        "patterns": [
          "createElement",
          "appendChild",
          "innerHTML ="
        ],
        "severity": "error"
      },
      "rem_units_only": {
        "patterns": [
          "\\d+px(?![\\w-])"
        ],
        "exceptions": [
          "border",
          "outline",
          "box-shadow"
        ],
        "severity": "error",
        "auto_fix": true
      },
      "data_attributes_required": {
        "forbidden_selectors": [
          "^\\.w-",
          "^#w-"
        ],
        "severity": "warning"
      },
      "no_console_production": {
        "patterns": [
          "console\\.log",
          "console\\.error",
          "console\\.warn"
        ],
        "severity": "error",
        "auto_fix": true
      }
    },
    "auto_fixes": {
      "px_to_rem": {
        "enabled": true,
        "base_size": 16
      },
      "console_to_debug": {
        "enabled": true,
        "wrapper": "if (DEBUG)"
      },
      "domcontentloaded_to_direct": {
        "enabled": true,
        "description": "Convert DOMContentLoaded to direct initialization for Slater"
      }
    },
    "levels": {
      "strict": {
        "pre_execution": true,
        "post_execution": true,
        "abort_on_warning": true
      },
      "standard": {
        "pre_execution": true,
        "auto_fix": true
      },
      "minimal": {
        "critical_only": true
      }
    }
  },
  "notebook_extraction": {
    "patterns": {
      "client_preferences": {
        "patterns": [
          "client (wants?|prefers?|likes?|dislikes?|needs?|requires?) (.+)",
          "preference:? (.+)",
          "requirement:? (.+)"
        ],
        "key_prefix": "client",
        "priority": "high"
      },
      "technical_constraints": {
        "patterns": [
          "must (use|implement|include|have) (.+)",
          "cannot (use|implement|include|have) (.+)",
          "constraint:? (.+)"
        ],
        "key_prefix": "constraint",
        "priority": "high"
      },
      "performance_targets": {
        "patterns": [
          "(\\d+)\\s?(KB|MB|kb|mb)(?:\\s+(?:max|limit|budget))?",
          "(\\d+)\\s?(ms|s)(?:\\s+(?:max|limit|target))?",
          "(\\d+)\\s?fps"
        ],
        "key_prefix": "performance",
        "priority": "medium"
      },
      "api_endpoints": {
        "patterns": [
          "https?://[\\w.-]+/api/[\\w.-/]+",
          "endpoint:? (.+)",
          "api:? (.+)"
        ],
        "key_prefix": "api",
        "priority": "high",
        "sensitive": true
      },
      "deadlines": {
        "patterns": [
          "by (\\d{4}-\\d{2}-\\d{2})",
          "deadline:? (.+)",
          "due:? (.+)"
        ],
        "key_prefix": "deadline",
        "priority": "high"
      }
    },
    "auto_extraction": {
      "enabled": true,
      "confidence_threshold": 0.8,
      "max_entries_per_category": 10,
      "deduplication": true
    },
    "storage": {
      "location": ".claude/memory-bank/facts.json",
      "format": "json",
      "persistence": "permanent",
      "auto_save": true
    }
  },
  "fallback_behaviors": {
    "code_analysis": {
      "method": "grep_and_read",
      "patterns": [
        "function",
        "class",
        "export",
        "import"
      ],
      "context_lines": 5
    },
    "optimization": {
      "method": "rule_based",
      "checks": [
        "bundle_size",
        "unused_imports",
        "console_logs",
        "pixel_units"
      ]
    },
    "security": {
      "method": "pattern_matching",
      "patterns": [
        "api_key",
        "secret",
        "password",
        "token",
        "eval",
        "innerHTML"
      ]
    },
    "context_export": {
      "method": "template_based",
      "include": [
        "current_branch",
        "recent_files",
        "active_tasks",
        "context_score"
      ]
    }
  },
  "current_commands": {
    "/memory": "Knowledge management (search|manual|auto)",
    "/logic": "System control & help (help|hooks|emergency) - Subcommands: help, hooks, system, tasks, debug, reuse",
    "/status": "Check system health"
  },
  "command_sync": {
    "_comment": "Auto-updated by quality/config-sync-hook.py when commands change",
    "last_sync": "2025-07-22 07:32:55",
    "sync_enabled": true
  }
}